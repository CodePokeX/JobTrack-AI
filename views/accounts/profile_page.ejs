
    <script src="https://cdn.tailwindcss.com"></script>

    <div class="flex flex-col md:flex-row min-h-screen">
        <div id="sidebar" class="md:w-1/5 p-6 shadow-lg bg-gray-100 text-blue-500 dark:bg-gray-800 dark:text-white flex flex-col items-center">
            <div class="mb-6">
                <img id="sidebar-profile-picture" src="<%= user.profilePhoto ? user.profilePhoto : '' %>" alt="Profile Picture" class="w-40 h-40 rounded-full object-cover <%= user.profilePhoto ? '' : 'hidden' %>" onerror="this.classList.add('hidden'); document.getElementById('sidebar-profile-picture-placeholder').classList.remove('hidden');" />
                <div id="sidebar-profile-picture-placeholder" class="w-40 h-40 rounded-full bg-gray-100 flex items-center justify-center <%= user.profilePhoto ? 'hidden' : '' %>">
                    <i class="fas fa-user text-4xl text-gray-500"></i>
                </div>
                <h1 class="text-xl font-bold mt-2 text-center"><%= user.firstname %> <%= user.lastname %></h1>
            </div>
            <ul class="space-y-3 w-full">
                <li><button class="tab-link w-full text-left text-md py-2 px-3 rounded-md hover:bg-gray-700 hover:text-blue-400 transition flex items-center" data-target="view-profile"><i class="fas fa-eye mr-2"></i>View</button></li>
                <li><button class="tab-link w-full text-left text-md py-2 px-3 rounded-md hover:bg-gray-700 hover:text-blue-400 transition flex items-center" data-target="edit-profile"><i class="fas fa-edit mr-2"></i>Edit</button></li>
            </ul>
        </div>

        <div class="flex-1 p-6">
            <div id="view-profile" class="content-section mt-0">
                <h2 class="text-2xl font-semibold mb-6 text-blue-400">üëÅ View Profile</h2>
                <div class="space-y-6">

                    <div class="bg-white p-6 rounded-lg shadow-lg">
                        <h3 class="text-xl font-semibold text-gray-800">About</h3>
                        <p id="vp-about" class="text-gray-600 mt-2"><%= user.about || 'N/A' %></p>
                    </div>

                    <div class="bg-white p-6 rounded-lg shadow-lg">
                        <h3 class="text-xl font-semibold text-gray-800">Education</h3>
                        <div id="vp-education" class="space-y-2 text-gray-600 mt-2">
                            <% if (user.education && user.education.length > 0) { %>
                                <% user.education.forEach(edu => { %>
                                    <div class="space-y-2">
                                        <p><strong><%= edu.degree %></strong> - <%= edu.institution %></p>
                                        <p>Year: <%= edu.year %></p>
                                    </div>
                                <% }); %>
                            <% } else { %>
                            <p>No education records added</p>
                            <% } %>
                        </div>
                    </div>

                    <div class="bg-white p-6 rounded-lg shadow-lg">
                        <h3 class="text-xl font-semibold text-gray-800">Skills</h3>
                        <ul id="vp-skills" class="text-gray-600 mt-2">
                            <% if (user.skills && user.skills.length > 0) { %>
                                <% user.skills.forEach(skill => { %>
                                    <li><%= skill %></li>
                                <% }); %>
                            <% } else { %>
                            <li>No skills added</li>
                            <% } %>
                        </ul>
                    </div>

                    <div class="bg-white p-6 rounded-lg shadow-lg">
                        <h3 class="text-xl font-semibold text-gray-800">Projects</h3>
                        <div id="vp-projects" class="text-gray-600 mt-2">
                            <% if (user.projects && user.projects.length > 0) { %>
                                <% user.projects.forEach(project => { %>
                                    <div class="mb-4">
                                        <p><strong><%= project.title %></strong></p>
                                        <p><%= project.description %></p>
                                        <% if (project.link) { %>
                                            <a href="<%= project.link %>" target="_blank" class="text-blue-500">View Project</a>
                                        <% } %>
                                    </div>
                                <% }); %>
                            <% } else { %>
                                <p>No projects added</p>
                            <% } %>
                        </div>
                    </div>

                    <div class="bg-white p-6 rounded-lg shadow-lg">
                        <h3 class="text-xl font-semibold text-gray-800">Email</h3>
                        <p id="vp-email" class="text-gray-600 mt-2"><%= user.email || 'N/A' %></p>
                    </div>

                    <div class="bg-white p-6 rounded-lg shadow-lg">
                        <h3 class="text-xl font-semibold text-gray-800">LinkedIn</h3>
                        <p id="vp-linkedin" class="text-gray-600 mt-2">
                            <% if (user.linkedin) { %>
                                <a href="<%= user.linkedin %>" target="_blank" class="text-blue-500"><%= user.linkedin %></a>
                            <% } else { %>
                                N/A
                            <% } %>
                        </p>
                    </div>

                    <div class="bg-white p-6 rounded-lg shadow-lg">
                        <h3 class="text-xl font-semibold text-gray-800">CV</h3>
                        <p>
                            <% if (user.cv) { %>
                                <a href="<%= user.cv %>" class="text-blue-500 underline" target="_blank">View CV</a>
                            <% } else { %>
                                <span class="text-gray-600">No CV uploaded</span>
                            <% } %>
                        </p>
                    </div>
                </div>
            </div>

            <div id="edit-profile" class="content-section hidden mt-0">
                <h2 class="text-2xl font-semibold mb-4 text-blue-400">‚úèÔ∏è Edit Profile</h2>
                <form id="profileForm" class="space-y-6" action="/profile/update" method="POST" enctype="multipart/form-data" novalidate>
                    <div>
                        <label class="block text-lg font-semibold">Upload Profile Picture:</label>
                        <input type="file" id="profile-picture-upload" name="profilePhoto" accept="image/*" class="w-full p-3 border rounded-lg bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500" />
                    </div>

                    <div>
                        <label class="block text-lg font-semibold">About:</label>
                        <textarea id="about" name="about" class="w-full p-3 border rounded-lg bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500" rows="4"><%= user.about || '' %></textarea>
                    </div>

                    <div id="education-container">
                        <label class="block text-lg font-semibold">Education:</label>
                        <% if (user.education && user.education.length > 0) { %>
                            <% user.education.forEach((edu, index) => { %>
                                <div class="education-entry mt-4 p-4 border rounded-lg">
                                    <div class="mb-3">
                                        <label class="block text-lg font-semibold">Degree:</label>
                                        <input type="text" name="edu-degree" value="<%= edu.degree %>" class="w-full p-3 border rounded-lg bg-gray-50" />
                                    </div>
                                    <div class="mb-3">
                                        <label class="block text-lg font-semibold">Institution:</label>
                                        <input type="text" name="edu-institution" value="<%= edu.institution %>" class="w-full p-3 border rounded-lg bg-gray-50" />
                                    </div>
                                    <div class="mb-3">
                                        <label class="block text-lg font-semibold">Year:</label>
                                        <input type="text" name="edu-year" value="<%= edu.year %>" class="w-full p-3 border rounded-lg bg-gray-50" />
                                    </div>
                                    <button type="button" class="remove-education bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition">Remove</button>
                                </div>
                            <% }); %>
                        <% } %>
                        <button type="button" id="add-education" class="mt-4 bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition">+ Add Education</button>
                    </div>

                    <div>
                        <label class="block text-lg font-semibold">Skills:</label>
                        <div class="mt-4">
                            <label class="block text-lg font-semibold">Select Skills:</label>
                            <div class="space-y-2 grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-x-6">
                                <% const skillOptions = [
                                    "Software Development", "Data Science", "Artificial Intelligence", 
                                    "Machine Learning", "Web Development", "Cloud Computing",
                                    "UI/UX Design", "DevOps", "Cybersecurity",
                                    "Mobile App Development", "Blockchain", "Database Management",
                                    "Natural Language Processing", "Game Development"
                                ] %>
                                <% skillOptions.forEach(skill => { %>
                                <label class="flex items-center">
                                        <input type="checkbox" name="skills" class="skill-checkbox" value="<%= skill %>" 
                                            <%= user.skills && user.skills.includes(skill) ? 'checked' : '' %> />
                                        <span class="ml-2"><%= skill %></span>
                                </label>
                                <% }) %>
                            </div>
                        </div>
                    </div>
                    
                    <div id="projects-container">
                        <label class="block text-lg font-semibold">Projects:</label>
                        <% if (user.projects && user.projects.length > 0) { %>
                            <% user.projects.forEach((project, index) => { %>
                                <div class="project-entry mt-4 p-4 border rounded-lg">
                                    <div class="mb-3">
                                        <label class="block text-lg font-semibold">Title:</label>
                                        <input type="text" name="project-title" value="<%= project.title %>" class="w-full p-3 border rounded-lg bg-gray-50" />
                                    </div>
                                    <div class="mb-3">
                                        <label class="block text-lg font-semibold">Description:</label>
                                        <textarea name="project-description" class="w-full p-3 border rounded-lg bg-gray-50" rows="2"><%= project.description %></textarea>
                                    </div>
                                    <div class="mb-3">
                                        <label class="block text-lg font-semibold">Link:</label>
                                        <input type="url" name="project-link" value="<%= project.link %>" class="w-full p-3 border rounded-lg bg-gray-50" />
                                    </div>
                                    <button type="button" class="remove-project bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition">Remove</button>
                    </div>
                            <% }); %>
                        <% } %>
                        <button type="button" id="add-project" class="mt-4 bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition">+ Add Project</button>
                    </div>

                    <div>
                        <label class="block text-lg font-semibold">LinkedIn URL:</label>
                        <input type="url" id="linkedin" name="linkedin" value="<%= user.linkedin || '' %>" class="w-full p-3 border rounded-lg bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500" />
                    </div>

                    <div>
                        <label class="block text-lg font-semibold">Upload CV (PDF):</label>
                        <input type="file" id="cv-upload" name="cv" accept="application/pdf" class="w-full p-3 border rounded-lg bg-gray-50 focus:outline-none focus:ring-2 focus:ring-blue-500" />
                    </div>

                    <div class="flex justify-between">
                        <button type="button" id="saveProfile" class="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition">Save</button>
                        <button type="button" id="resetForm" class="bg-gray-300 text-gray-700 px-6 py-3 rounded-lg hover:bg-gray-400 transition">Reset</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script>
        // Tab Switching Functionality
        const tabLinks = document.querySelectorAll('.tab-link');
        const sections = document.querySelectorAll('.content-section');

        tabLinks.forEach(link => {
            link.addEventListener('click', () => {
                const targetSection = document.getElementById(link.getAttribute('data-target'));
                sections.forEach(section => section.classList.add('hidden'));
                targetSection.classList.remove('hidden');
            });
        });

        // Make sure all code is properly initialized when page loads
        window.addEventListener('DOMContentLoaded', function() {
            console.log("DOM fully loaded and parsed");
            console.log("Add Education button exists:", !!document.getElementById("add-education"));
            console.log("Education container exists:", !!document.getElementById("education-container"));
            
            // Re-initialize event listeners for add education
            const addEducationBtn = document.getElementById("add-education");
            if (addEducationBtn) {
                console.log("Setting up add education listener");
                addEducationBtn.addEventListener("click", function() {
                    console.log("Add Education button clicked");
                    const educationContainer = document.getElementById("education-container");
                    console.log("Education container found:", !!educationContainer);
                    
                    if (!educationContainer) {
                        console.error("Education container not found!");
                        return;
                    }
                    
                    const educationEntry = document.createElement("div");
                    educationEntry.classList.add("education-entry", "mt-4", "p-4", "border", "rounded-lg");
                    educationEntry.innerHTML = `
                        <div class="mb-3">
                            <label class="block text-lg font-semibold">Degree:</label>
                            <input type="text" name="edu-degree" class="w-full p-3 border rounded-lg bg-gray-50" />
                        </div>
                        <div class="mb-3">
                            <label class="block text-lg font-semibold">Institution:</label>
                            <input type="text" name="edu-institution" class="w-full p-3 border rounded-lg bg-gray-50" />
                        </div>
                        <div class="mb-3">
                            <label class="block text-lg font-semibold">Year:</label>
                            <input type="text" name="edu-year" class="w-full p-3 border rounded-lg bg-gray-50" />
                        </div>
                        <button type="button" class="remove-education bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition">Remove</button>
                    `;
                    
                    try {
                        educationEntry.querySelector(".remove-education").addEventListener("click", () => {
                            educationEntry.remove();
                        });
                        educationContainer.insertBefore(educationEntry, document.getElementById("add-education"));
                        console.log("Education entry added successfully");
                    } catch (error) {
                        console.error("Error adding education entry:", error);
                    }
                });
            }
        });

        // Add Project Entry
        document.getElementById("add-project").addEventListener("click", () => {
            const projectsContainer = document.getElementById("projects-container");
            const projectEntry = document.createElement("div");
            projectEntry.classList.add("project-entry", "mt-4", "p-4", "border", "rounded-lg");
            projectEntry.innerHTML = `
                <div class="mb-3">
                    <label class="block text-lg font-semibold">Title:</label>
                    <input type="text" name="project-title" class="w-full p-3 border rounded-lg bg-gray-50" />
                </div>
                <div class="mb-3">
                    <label class="block text-lg font-semibold">Description:</label>
                    <textarea name="project-description" class="w-full p-3 border rounded-lg bg-gray-50" rows="2"></textarea>
                </div>
                <div class="mb-3">
                    <label class="block text-lg font-semibold">Link:</label>
                    <input type="url" name="project-link" class="w-full p-3 border rounded-lg bg-gray-50" />
                </div>
                <button type="button" class="remove-project bg-red-600 text-white px-4 py-2 rounded-md hover:bg-red-700 transition">Remove</button>
            `;
            projectEntry.querySelector(".remove-project").addEventListener("click", () => {
                projectEntry.remove();
            });
            projectsContainer.insertBefore(projectEntry, document.getElementById("add-project"));
        });

        // Set up event handlers for existing remove buttons
        document.querySelectorAll('.remove-education').forEach(button => {
            button.addEventListener('click', function() {
                this.closest('.education-entry').remove();
            });
        });

        document.querySelectorAll('.remove-project').forEach(button => {
            button.addEventListener('click', function() {
                this.closest('.project-entry').remove();
            });
        });

        // Form submission
        document.getElementById('saveProfile').addEventListener('click', function() {
            submitProfileForm();
        });
        
        // Reset form
        document.getElementById("resetForm").addEventListener("click", function () {
            if (confirm('Are you sure you want to reset the form? All unsaved changes will be lost.')) {
                document.getElementById("profileForm").reset();
                window.location.reload(); // Reload to get the original values
            }
        });
        
        function submitProfileForm() {
            const form = document.getElementById('profileForm');
            
            // Display loading message
            const submitBtn = document.getElementById('saveProfile');
            const originalBtnText = submitBtn.textContent;
            submitBtn.textContent = "Saving...";
            submitBtn.disabled = true;
            
            // Collect education data
            const educationEntries = document.querySelectorAll('.education-entry');
            const educationData = Array.from(educationEntries).map(entry => {
                const degreeInput = entry.querySelector('input[name="edu-degree"]');
                const institutionInput = entry.querySelector('input[name="edu-institution"]');
                const yearInput = entry.querySelector('input[name="edu-year"]');
                
                return {
                    degree: degreeInput ? degreeInput.value : '',
                    institution: institutionInput ? institutionInput.value : '',
                    year: yearInput ? yearInput.value : ''
                };
            });
            
            // Collect project data
            const projectEntries = document.querySelectorAll('.project-entry');
            const projectsData = Array.from(projectEntries).map(entry => {
                return {
                    title: entry.querySelector('input[name="project-title"]').value,
                    description: entry.querySelector('textarea[name="project-description"]').value,
                    link: entry.querySelector('input[name="project-link"]').value
                };
            });

            // Create FormData object for the file uploads
            const formData = new FormData(form);
            
            // Add the JSON data for education and projects
            formData.set('education', JSON.stringify(educationData));
            formData.set('projects', JSON.stringify(projectsData));
            
            // Validate files before submission
            const profilePhoto = formData.get('profilePhoto');
            const cv = formData.get('cv');
            
            // Log file objects for debugging
            if (profilePhoto && profilePhoto.name) {
                console.log("Profile photo details:", {
                    name: profilePhoto.name,
                    type: profilePhoto.type,
                    size: profilePhoto.size
                });
            }
            
            if (cv && cv.name) {
                console.log("CV details:", {
                    name: cv.name,
                    type: cv.type,
                    size: cv.size
                });
            }
            
            // Remove empty files (browsers can send empty File objects)
            if (profilePhoto && profilePhoto.size === 0) {
                formData.delete('profilePhoto');
                console.log("Removed empty profile photo from form data");
            }
            
            if (cv && cv.size === 0) {
                formData.delete('cv');
                console.log("Removed empty CV from form data");
            }
            
            // Add an explicit header to request JSON
            const fetchOptions = {
                method: 'POST',
                body: formData,
                headers: {
                    'Accept': 'application/json'
                }
            };
            
            // Log what's being submitted (for debugging)
            console.log("Submitting profile update:");
            console.log("- Education entries:", educationData.length);
            console.log("- Project entries:", projectsData.length);
            console.log("- Skills:", formData.getAll('skills'));
            console.log("- Files:", 
                formData.has('profilePhoto') && formData.get('profilePhoto').size > 0 ? "Profile photo included (will be stored in /media/profiles/)" : "No profile photo", 
                formData.has('cv') && formData.get('cv').size > 0 ? "CV included (will be stored in /media/cv/)" : "No CV");
            
            // Make the AJAX request with a timeout
            const fetchPromise = fetch('/profile/update', fetchOptions);
            
            // Add timeout to fetch request
            const timeoutPromise = new Promise((_, reject) => {
                setTimeout(() => reject(new Error('Request timed out')), 30000); // 30 seconds
            });
            
            // Race between fetch and timeout
            Promise.race([fetchPromise, timeoutPromise])
                .then(response => {
                    // First check if the response is OK
                    if (!response.ok) {
                        throw new Error(`Server error: ${response.status}`);
                    }
                    
                    // Check the content type to determine how to handle the response
                    const contentType = response.headers.get('content-type') || '';
                    if (contentType.includes('application/json')) {
                        return response.json().then(data => {
                            // If we got JSON with an error message, throw it
                            if (!data.success) {
                                throw new Error(data.message || 'Unknown error');
                            }
                            return data;
                        });
                    } else if (contentType.includes('text/html')) {
                        // If we got HTML, the server might have redirected or returned an error page
                        console.log('Server returned HTML instead of JSON. Reloading page...');
                        // Just reload the page to show whatever the server wants us to see
                        window.location.reload();
                        // Return a promise that never resolves to prevent further processing
                        return new Promise(() => {});
                    } else {
                        // For any other content type, assume success
                        return { success: true };
                    }
                })
                .then(data => {
                    // Show success message
                    const successMsg = document.createElement('div');
                    successMsg.className = 'fixed top-4 right-4 bg-green-500 text-white px-4 py-2 rounded shadow-lg z-50';
                    successMsg.textContent = data.message || 'Profile updated successfully!';
                    document.body.appendChild(successMsg);
                    
                    // Remove success message after 2 seconds and redirect
                    setTimeout(() => {
                        successMsg.remove();
                        // Reload the page to show updated data
                        window.location.href = '/profile';
                    }, 2000);
                })
                .catch(error => {
                    console.error('Error updating profile:', error);
                    
                    // Reset button
                    submitBtn.textContent = originalBtnText;
                    submitBtn.disabled = false;
                    
                    // Show error message
                    const errorMsg = document.createElement('div');
                    errorMsg.className = 'fixed top-4 right-4 bg-red-500 text-white px-4 py-2 rounded shadow-lg z-50';
                    errorMsg.textContent = 'Failed to update profile: ' + error.message;
                    document.body.appendChild(errorMsg);
                    
                    // Remove error message after 5 seconds
                    setTimeout(() => {
                        errorMsg.remove();
                    }, 5000);
                });
        }

        // Add debug shortcut key combination (Ctrl+Shift+D)
        document.addEventListener('keydown', function(e) {
            if (e.ctrlKey && e.shiftKey && e.key === 'D') {
                document.getElementById('debug-info').classList.toggle('show');
            }
        });

        // On page load, check if media paths are valid
        window.addEventListener('load', function() {
            // Debug info in console
            console.log('User data loaded:', {
                id: '<%= user._id %>',
                profilePhoto: '<%= user.profilePhoto %>',
                cv: '<%= user.cv %>'
            });

            // Check profile photo and show error if it doesn't load
            if ('<%= user.profilePhoto %>') {
                const img = document.getElementById('sidebar-profile-picture');
                img.onerror = function() {
                    console.error('Profile photo failed to load:', img.src);
                    this.classList.add('hidden');
                    document.getElementById('sidebar-profile-picture-placeholder').classList.remove('hidden');
                };
            }

            // Check CV link
            if ('<%= user.cv %>') {
                const cvLink = document.querySelector('a[href="<%= user.cv %>"]');
                if (cvLink) {
                    // Test if the CV exists by making a HEAD request
                    fetch('<%= user.cv %>', { method: 'HEAD' })
                        .then(response => {
                            if (!response.ok) {
                                console.error('CV file not found:', cvLink.href);
                                cvLink.insertAdjacentHTML('afterend', ' <span class="text-red-500">(File may be missing)</span>');
                                // Add click handler to prevent navigation if file is missing
                                cvLink.addEventListener('click', function(e) {
                                    if (!response.ok) {
                                        e.preventDefault();
                                        alert('The CV file could not be found. Please upload a new CV.');
                                    }
                                });
                            }
                        })
                        .catch(err => {
                            console.error('Error checking CV file:', err);
                        });
                }
            }
        });
    </script>
</body>
</html>